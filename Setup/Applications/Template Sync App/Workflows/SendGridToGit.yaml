harnessApiVersion: '1.0'
type: BUILD
description: Sync direction-  SendGrid to GitHub
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- daemonSet: false
  name: Phase 1
  phaseSteps:
  - type: PREPARE_STEPS
    name: Prepare Steps
    steps:
    - type: HTTP
      name: Get SendGrid Template
      properties:
        assertion: json.select("template_id", ${httpResponseBody}) == 101
        body: ''
        executeWithPreviousSteps: false
        method: GET
        publishAsVar: true
        responseProcessingExpressions:
        - name: html_content
          valueType: TEXT
          value: ${json.select("html_content", httpResponseBody)}
        sweepingOutputName: httpoutput
        sweepingOutputScope: PIPELINE
        tags: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 10000
        url: https://05564a40-ab49-4b6e-be44-92bc2779ede8.mock.pstmn.io/v3/templates/101/versions/1.0
        useProxy: false
    - type: SHELL_SCRIPT
      name: Formatting
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        outputVars: JSON_STRING
        publishAsVar: true
        scriptString: |
          html_content='${context.httpoutput.html_content}'
          echo "HTML Content: "
          echo $html_content
          echo "------"

          encoded_html_content=$(printf '%s' "$html_content" | base64)

          echo "HTML Encoded Content: "
          echo $encoded_html_content
          echo "------"
          #JSON_STRING=$(printf '{"content" : "%s"}' "$encoded_html_content")
          JSON_STRING=$(printf "%s" "$encoded_html_content")
          echo $JSON_STRING
          export JSON_STRING=$JSON_STRING
        scriptType: BASH
        secretOutputVars: ''
        sshKeyRefName: null
        sweepingOutputName: ${instance.name}
        sweepingOutputScope: PIPELINE
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    - type: HTTP
      name: Save in Git
      properties:
        assertion: ${context.res.JSON_STRING} == "PCFET0NUWVBFIGh0bWw+PGh0bWw+PGJvZHk+PGgxPkJvb2tpbmcgQ29uZmlybWVkITwvaDE+PHA+ Qm9va2luZyBOdW1iZXI6IDEyMzQ1PC9wPjwvYm9keT48L2h0bWw+"
        body: |-
          {
          "content": "${context.get(${instance.name}).JSON_STRING}",
          "message" : "Committed via Harness"
          }
        executeWithPreviousSteps: false
        headers:
        - key: Authorization
          value: Basic a3VudXBhdDpnaHBfWVozeUdWRzJDWmFpT2dkOHlzRURCWmFTY1I2ckExM3FPWnJN
        method: PUT
        publishAsVar: false
        responseProcessingExpressions: ''
        sweepingOutputName: null
        sweepingOutputScope: null
        tags: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 10000
        url: https://api.github.com/repos/kunupat/templates/contents/template3.txt
        useProxy: false
    stepsInParallel: true
  - type: COLLECT_ARTIFACT
    name: Collect Artifact
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  statefulSet: false
templatized: false
